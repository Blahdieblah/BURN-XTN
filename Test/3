{-# STDLIB_VERSION 6 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let address = base58'3PCBL2vbjAVFbiCwmGsPmT6QdATutQnM8ov'

let poolId = base58'3PE7NtJdmVq4yo47LKDqurQ8RLDCouvJCPB'
let poolString = toBase58String(poolId)

let xtnId = base58'DG2xFkPdDwKUoBkzGAhQtLpSGzfXLiCYPEzeKH2Ad24p'
let burnxtnId = base58'3SjxA2YLdfF9fTRbzLm9xFn27C6MW34W1YsdJ6Axefns'
let burnxtnString = toBase58String(burnxtnId)

let westId = base58'4LHHvYGNKJUg5hj65aGD5vgScvCBmLpdRFtjokvCjSL8'
let viresId = base58'DSbbhLsSTeDg5Lsiufk2Aneh3DjVqJuPr2M9uU1gwy5p'

let xtnamount = assetBalance(Address(address), xtnId)
let burnxtnamount = assetBalance(Address(address), burnxtnId)
let westamount = assetBalance(Address(address), westId)
let viresamount = assetBalance(Address(address), viresId)

let westpmt = AttachedPayment(westId,westamount)
let virespmt = AttachedPayment(viresId,viresamount)

let pmtpool = AttachedPayment(burnxtnId,burnxtnamount)

@Callable(i)
func ClaimBurn() = {
  strict claimInv = invoke(Address(base58'3PE7NtJdmVq4yo47LKDqurQ8RLDCouvJCPB'), "claimIndexRewards", [], [])
  strict swapViresInv = invoke(Address(poolId), "swap", [burnxtnString,0], [virespmt])
  strict poolOneTokenInv = invoke(Address(base58'3PR1Qvi9mHT35SwWEkLSqqE2L8thiPLdVWU'), "generateIndexWithOneTokenAndStake", [poolString],[pmtpool])
  let xtnBurn = Burn(xtnId, xtnamount)
  let burnxtnBurn = Burn(burnxtnId, burnxtnamount)
  let scTxRefund = ScriptTransfer(i.caller, 500000, unit)
    [
    scTxRefund,
    xtnBurn,
    burnxtnBurn
    ]
}

@Callable(i)
func Swap() = {
  strict swapInv = invoke(Address(poolId), "swap", [burnxtnString,1], [westpmt])
  []
}

@Callable(i)
func Pool() = {
  strict poolOneTokenInv = invoke(Address(base58'3PR1Qvi9mHT35SwWEkLSqqE2L8thiPLdVWU'), "generateIndexWithOneTokenAndStake", [poolString],[pmtpool])
  []
}
